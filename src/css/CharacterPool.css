.CharacterPool {
    display: flex;
    flex-direction: column;
    gap: 1rem;

    padding: 1.5rem;
    transition: all 300ms;
}
.CharacterPool.blue {
    border-color: rgb(59, 130, 246);
    outline: 1px solid rgb(59, 130, 246);
    background-color: color-mix(in srgb, rgb(0, 0, 0) 80%, rgb(59, 130, 246) 20%);
}
.CharacterPool.red {
    border-color: rgb(239, 68, 68);
    outline: 1px solid rgb(239, 68, 68);
    background-color: color-mix(in srgb, rgb(0, 0, 0) 85%, rgb(239, 68, 68) 15%);
}

/* Draft Status */
.CharacterPool > .status-container {
    position: relative;
    width: 100%;
    height: 1px;
    background-color: rgb(75, 85, 99);
}
.CharacterPool > .status-container > .begin-draft, .CharacterPool > .status-container > .draft-complete {
    position: absolute;
    width: max-content;
    top: 2rem;
    left: 50%;
    transform: translateX(-50%);
    z-index: 30;
    padding: 0.75rem 1.25rem;

    font-size: clamp(1.375rem, 2.1vw, 1.5rem);
    font-weight: bold;
    border-radius: 9999px;
    user-select: none;
    
    background-color: rgba(0, 0, 0, 0.75);
    box-shadow: 0px 0px 9px 3px rgba(0, 0, 0, 0.5);
}
.CharacterPool > .status-container > .begin-draft {
    color: rgb(250, 204, 21);
}
.CharacterPool > .status-container > .draft-complete {
    color: rgb(96, 195, 230);
}

/* Filters container */
.CharacterPool > .filters {
    width: 100%;

    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
}

/* Filter category */
.CharacterPool > .filters > * {
    flex-grow: 1;
    height: 2.5rem;

    /* Mobile fix for when we get more Paths/Elements down the line, make the category scrollable. Just barely fits atm */
    overflow-x: scroll;
    scrollbar-width: none;
    -ms-overflow-style: none;

    display: flex;
    justify-content: center;
    align-items: center;

    border: 1px solid rgb(75, 85, 99);
    background-color: rgb(55, 65, 81);
    border-radius: 0.25rem;
    box-shadow: 1px 1px 4px 2px rgba(0, 0, 0, 0.16);

    transition: all 200ms ease;
}

/* Filter Button */
.CharacterPool > .filters > *:not(button) > * {
    flex-grow: 1;
    position: relative; /* needed for ::after */
    height: 100%;
    min-width: 2.25rem;

    display: flex;
    justify-content: center;
    align-items: center;
    gap: 0.5rem;

    color: rgb(209, 213, 219);
    font-weight: 500;

    transition: 200ms ease-out;
}
.CharacterPool > .filters > *:not(button) > *:not(.selected):hover {
    /* Hover effect over non-selected buttons */
    background-color: rgb(75, 85, 99);
}
.CharacterPool > .filters > * > *.selected {
    /* Filter button selected */
    color: white;
    background-color: rgb(8, 145, 178);
}
.CharacterPool > .filters > * > *:not(:last-child)::after {
    /* Border separating the buttons inside a Category */
    content: '';
    position: absolute;
    right: 0;
    top: 0;
    height: 100%;
    width: 1px;
    background-color: rgb(75, 85, 99);
}
.CharacterPool > .filters > *:not(button, input) > *:first-child {
    /* Hide overflow when first button selected */
    border-top-left-radius: 0.25rem;
    border-bottom-left-radius: 0.25rem;
}
.CharacterPool > .filters > *:not(button, input) > *:last-child {
    /* Hide overflow when last button selected */
    border-top-right-radius: 0.25rem;
    border-bottom-right-radius: 0.25rem;
}

/* Filter Buttons - misc */
.CharacterPool > .filters > .elements, .CharacterPool > .filters > .paths {
    /* Elements and path take slightly more space */
    flex-grow: 4;
}
.CharacterPool > .filters > .roles > * {
    padding-inline: 1.125rem;
}

/* Filter - Search Bar */
.CharacterPool > .filters > .search-bar {
    padding-inline: 0.75rem;
}
.CharacterPool > .filters > .search-bar:hover, .CharacterPool > .filters > .search-bar:focus {
    border-color: rgb(34, 201, 228);
}

/* Filter - Clear button */
.CharacterPool > .filters > .clear-button {
    padding-inline: 0.5rem;
    gap: 0.375rem;

    border: none;
    background-color: rgb(220, 38, 38);
    font-weight: 500;

    transition: 200ms ease;
}
.CharacterPool > .filters > .clear-button:hover:not(:disabled) {
    background-color: rgb(185, 28, 28);
}
.CharacterPool > .filters > .clear-button:disabled {
    box-shadow: none;
    opacity: 0.33;
}

/* Characters container */
.CharacterPool > .characters-container {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(9rem, 1fr));
    gap: 0.75rem;
}

/* Character card */
.CharacterPool > .characters-container > .character {
    position: relative;
    aspect-ratio: 1 / 1.1;
    overflow: hidden;

    border-radius: 0.5rem;
    cursor: pointer;
    transition: all 300ms;
}

/* Character Disabled */
.CharacterPool > .characters-container > .character.disabled {
    pointer-events: none;
    box-shadow: 2px 2px 4px 3px rgba(0, 0, 0, 0.25) !important;
    filter: grayscale(100%) brightness(0.8) !important;
}

/* Character Picked */
.CharacterPool > .characters-container > .character.picked {
    pointer-events: none;
    border-color: rgba(34, 239, 68, 0.66) !important;
    box-shadow: 2px 2px 4px 3px rgba(34, 239, 68, 0.16) !important;
}
.CharacterPool > .characters-container > .character.picked > img, .CharacterPool > .characters-container > .character.picked > .name {
    filter: grayscale(100%) brightness(0.8) !important;
}
.CharacterPool > .characters-container > .character.picked > .status-overlay {
    color: rgb(34, 209, 68);
}

/* Character Banned */
.CharacterPool > .characters-container > .character.banned {
    pointer-events: none;
    border-color: rgba(239, 34, 68, 0.66) !important;
    box-shadow: 2px 2px 4px 3px rgba(239, 34, 68, 0.16) !important;
}
.CharacterPool > .characters-container > .character.banned > img, .CharacterPool > .characters-container > .character.banned > .name {
    filter: grayscale(100%) brightness(0.8) !important;
}
.CharacterPool > .characters-container > .character.banned > .status-overlay {
    color: rgb(209, 34, 68);
}

/* Character status (picked/banned) */
.CharacterPool > .characters-container > .character > .status-overlay {
    position: absolute;
    top: 0;
    height: 100%;
    width: 100%;
    z-index: 20;

    display: flex;
    justify-content: center;
    align-items: center;

    font-size: 1.5rem;
    font-weight: bold;

    filter: drop-shadow(0px 2px 2px black);
}

/* Character's Image */
.CharacterPool > .characters-container > .character > img {
    height: 100%;
    width: 100%;
    object-fit: cover;
    z-index: 10;

    border-radius: 0.5rem;
    user-select: none;

    transition: filter 300ms;
    filter: grayscale(5%) brightness(0.9) opacity(0.9);
}
.CharacterPool > .characters-container > .character:hover > img {
    filter: grayscale(0%) brightness(1) opacity(1);
}

/* Character's Name */
.CharacterPool > .characters-container > .character > .name {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: 20;

    font-size: clamp(1rem, 1.5vw, 1.125rem);
    color: rgb(209, 213, 219);
    line-height: 1.75rem;
    user-select: none;

    padding-inline: 0.25rem;
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;

    border-bottom-left-radius: 0.5rem;
    border-bottom-right-radius: 0.5rem;
    background-color: rgba(0, 0, 0, 0.75);
}

/* small info box (Searching/no results textbox) */
.CharacterPool > .info {
    padding-block: 5rem;
    text-align: center;

    color: rgb(156, 163, 175);
    font-size: 1.125rem;
    user-select: none;
}

/* Apply on mobile screens only */
@media screen and (max-width: 640px) {
    /* allow characters to take up less space */
    .CharacterPool > .characters-container {
        grid-template-columns: repeat(auto-fit, minmax(8rem, 1fr));
    }
}
@media screen and (max-width: 767px) {
    .CharacterPool {
        padding: 1rem;
    }
}